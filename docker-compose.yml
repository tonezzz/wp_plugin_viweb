version: "3.8"

services:
  apache:
    #image: httpd:2.4
    build:
      context: ./dockers/apache
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_apache
    mem_limit: 512m
    #entrypoint: []
    #command:
    #  - /bin/bash
    #  - -c
    #  - |
    #    apt update
    #    apt install -y certbot python3-certbot-apache lynx
    #    httpd -D FOREGROUND
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./wordpress:/usr/local/apache2/htdocs
      - ./dockers/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./dockers/apache/httpd-ssl.conf/usr/local/apache2/conf/extra/httpd-ssl.conf
      - ./dockers/apache/sites-enabled:/etc/apache2/sites-enabled
      - ./persistent-data/letsencrypt:/etc/letsencrypt
      #- ./dockers/apache/ssl/server.crt:/usr/local/apache2/conf/server.crt
      #- ./dockers/apache/ssl/server.key:/usr/local/apache2/conf/server.key
      - ./persistent-data/letsencrypt/live/thakarn.gizmo-thailand.com/fullchain.pem:/usr/local/apache2/conf/server.crt
      - ./persistent-data/letsencrypt/live/thakarn.gizmo-thailand.com/privkey.pem:/usr/local/apache2/conf/server.key
      - ./tmp:/var/log/letsencrypt/
      #- ./dockers/apache/init:/init
    depends_on:
      - php-fpm
  
  php-fpm:
    build:
      context: ./dockers/php-fpm
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_php-fpm
    mem_limit: 4g
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./wordpress:/usr/local/apache2/htdocs
      - ./persistent-data/uploads:/usr/local/apache2/htdocs/wp-content/uploads
      - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    environment:
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX}
      - WORDPRESS_DB_HOST=mariadb
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
    depends_on:
      - mariadb

  mariadb:
    image: mariadb:latest
    container_name: ${PROJECT_NAME}_mariadb
    mem_limit: 512m
    #entrypoint: mysqld --tc-heuristic-recover
    volumes:
      - ./persistent-data/mysql:/var/lib/mysql
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

  phpmyadmin:
    platform: linux/x86_64
    image: phpmyadmin/phpmyadmin
    container_name: ${PROJECT_NAME}_phpmyadmin
    mem_limit: 512m
    ports:
      - "81:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mariadb
      #- TZ
      #- UPLOAD_LIMIT=200M
    volumes:
      - ./persistent-data/letsencrypt/live/thakarn.gizmo-thailand.com/fullchain.pem:/usr/local/apache2/conf/server.crt
      - ./persistent-data/letsencrypt/live/thakarn.gizmo-thailand.com/privkey.pem:/usr/local/apache2/conf/server.key
    depends_on:
      - mariadb

  redis:
    platform: linux/x86_64
    image: redis:alpine
    container_name: ${PROJECT_NAME}_redis
    restart: ${RESTART_POLICY}
    entrypoint: redis-server --appendonly yes
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ./dockers/storage/redis-data/:/data/
